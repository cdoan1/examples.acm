---

apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: upgrade-27
  namespace: open-cluster-management-pipelines-upgrade
spec:
  workspaces:
  - name: source
  params:
  - name: upgrade-snapshot
    default: '2.7.0-DOWNSTREAM-2022-09-23-23-38-39'
    description: snapshot version number, required
    type: string  
  - name: GITOPS_SECRET_NAME
    default: 'install-secret'
    description: Name of the secret that contains credentials
    type: string
  steps:
  - args:
    - |-
      
      _PS=$(oc get secret $(params.GITOPS_SECRET_NAME) -ojsonpath='{.data.globalPullSecretEncoded}' | base64 --decode)
      
      oc cluster-info

      echo ""
      echo "Start Rolling Sprint Driver Upgrade of ACM/MCE ..."
      echo ""

      echo "Verify connection and Multicluster Engine is present."
      out=`oc get mce multiclusterengine 2>&1`
      if [ $? -ne 0 ]; then
        echo "Did not find the resource multiclusterengine-sample. Make sure you are connected to the correct OpenShift."
        printf "\n${out}\n"
        exit 1
      fi

      if [ "$(params.upgrade-snapshot)" == "" ]; then
        echo "No upgrade-snapshot provided"
        exit 1
      fi

      echo "Verify acm-custom-registry in openshift-marketplace."
      oc get -n openshift-marketplace catalogsource acm-custom-registry > /dev/null 2>&1
      if [ $? -ne 0 ]; then
        echo "catalogSource is misisng"
        exit 1
      fi

      echo "Verify multiclusterengine-catalog in openshift-marketplace."
      oc get -n openshift-marketplace catalogsource multiclusterengine-catalog > /dev/null 2>&1
      if [ $? -ne 0 ]; then
        echo "catalogSource is misisng"
        exit 1
      fi

      echo "Current Catalog Source Imagee:"
      oc get catalogsource -n openshift-marketplace -o yaml | grep "image:" | grep DOWN

      echo "Deploying a new ACM Catalog Source."
      oc apply -f - <<EOF
      apiVersion: operators.coreos.com/v1alpha1
      kind: CatalogSource
      metadata:
        name: acm-custom-registry
        namespace: openshift-marketplace
      spec:
        displayName: Advanced Cluster Management
        image: quay.io:443/acm-d/acm-custom-registry:$(params.upgrade-snapshot)
        publisher: Red Hat
        secrets:
        - multiclusterhub-operator-pull-secret
        sourceType: grpc
        updateStrategy:
          registryPoll:
            interval: 10m
      EOF
      if [ $? -ne 0 ]; then
        echo "Error when attempting to update the acm-custom-registry CatalogSource in openshift-marketplace"
        exit 1
      fi

      echo "Deploying a new MCE Catalog Source."
      oc apply -f - <<EOF
      apiVersion: operators.coreos.com/v1alpha1
      kind: CatalogSource
      metadata:
        name: multiclusterengine-catalog
        namespace: openshift-marketplace
      spec:
        displayName: MultiCluster Engine
        image: quay.io:443/acm-d/mce-custom-registry:$(params.upgrade-snapshot)
        publisher: Red Hat
        sourceType: grpc
        updateStrategy:
          registryPoll:
            interval: 10m
      EOF

      if [ $? -ne 0 ]; then
        echo "Error when attempting to update the multiclusterengine-catalog CatalogSource in openshift-marketplace"
        exit 1
      fi

      echo "Deleting current csv acm ..."
      oc -n open-cluster-management delete csv advanced-cluster-management.v2.7.0 || true
      # if [ $? -ne 0 ]; then
      #   exit 1
      # fi
  
      echo "Deleting current csv mce ..."
      oc -n multicluster-engine delete csv multicluster-engine.v2.2.0 || true
      # if [ $? -ne 0 ]; then
      #   exit 1
      # fi

      echo "Deleting current subscription.operator advanced-cluster-management ..."
      oc -n open-cluster-management delete subscription.operator advanced-cluster-management || true
      # if [ $? -ne 0 ]; then
      #   exit 1
      # fi

      echo "Deleting current subscription.operator multicluster-engine ..."
      oc -n multicluster-engine delete subscription.operator multicluster-engine || true
      # if [ $? -ne 0 ]; then
      #   exit 1
      # fi

      echo "Pausing 30s for csv and subscription delete to finalize ..."
      sleep 30

      echo "Recreating acm subscription"

      oc create -f - <<EOF
      apiVersion: operators.coreos.com/v1alpha1
      kind: Subscription
      metadata:
        labels:
          operators.coreos.com/advanced-cluster-management.open-cluster-management: ""
        name: advanced-cluster-management
        namespace: open-cluster-management
      spec:
        channel: release-2.7
        installPlanApproval: Automatic
        name: advanced-cluster-management
        source: acm-custom-registry
        sourceNamespace: openshift-marketplace
        startingCSV: advanced-cluster-management.v2.7.0
      EOF
      if [ $? -ne 0 ]; then
        echo "failed to apply subscription acm"
        exit 1
      fi

      echo "Check if mch has annotation for MCE ..."
      echo "Recreating acm subscription"

      oc create -f - <<EOF
      apiVersion: operators.coreos.com/v1alpha1
      kind: Subscription
      metadata:
        labels:
          operators.coreos.com/multicluster-engine.multicluster-engine: ""
        name: multicluster-engine
        namespace: multicluster-engine
      spec:
        channel: stable-2.2
        installPlanApproval: Automatic
        name: multicluster-engine
        source: multiclusterengine-catalog
        sourceNamespace: openshift-marketplace
      EOF
      if [ $? -ne 0 ]; then
        echo "failed to apply subscription mce"
        exit 1
      fi

      echo "Pause 30s for subscription to flush ..."
      sleep 30

      echo "Wait for steady state ..."
      oc wait --for="condition=complete" mch multiclusterhub -n open-cluster-management --timeout=600s

      echo "Upgrade complete."

      if [[ "$@" == *"--watch"* ]]; then
        watch oc -n multicluster-engine get pods --sort-by=.metadata.creationTimestamp
      fi

      exit 0
    command:
    - /bin/bash
    - -c
    image: quay.io/zkayyali812/ocm-utils:latest
    name: apply
    resources: {}
    workingDir: /workspace/source
