---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: mce-wait-ready
  namespace: open-cluster-management-pipelines-mce
spec:
  params:
  - name: skip26
    default: "false"
    description: "skip this task"
    type: string
  - name: namespace
    default: "open-cluster-management"
    description: "namespace where ACM is installed"
    type: string
  - name: kubeconfig
    default: ""
    description: "base64 encoded kubeconfig of the cluster we want to run this task on. Default to empty string, use the current cluster."
    type: string
  - name: managed-cluster
    default: "osdprestaging"
    description: "name of the managed cluster to run tasks on."
    type: string
  steps:
  - args:
    - |-
      set -x

      if [[ "$(params.skip26)" == "true" ]]; then
        exit 0
      fi

      if [ -f $(pwd)/remote.kubeconfig ]; then
        export KUBECONFIG=$(pwd)/remote.kubeconfig
      fi
      
      oc cluster-info

      NS=$(params.namespace)
      NS2=multicluster-engine

      date -u
      oc wait --for="condition=Complete" mch multiclusterhub -n $NS --timeout=600s
      oc wait --for="condition=Available" mce multiclusterengine -n multicluster-engine --timeout=900s
      date -u
      
      oc get -n $NS sub.operator advanced-cluster-management -ojsonpath='{.status}' || true

      mce_current_csv=$(oc get sub -n multicluster-engine -ojsonpath='{.items[].status.currentCSV}')
      _mce_csv_condition=$(oc get csv -n multicluster-engine $mce_current_csv -ojsonpath='{.status.conditions[-1].phase}')

      ace_current_csv=$(oc get sub -n $NS -l operators.coreos.com/advanced-cluster-management.$NS= -ojsonpath='{.items[].status.currentCSV}')
      _acm_csv_condition=$(oc get csv -n $NS $ace_current_csv -ojsonpath='{.status.conditions[-1].phase}')

      echo " mce csv: $_mce_csv_condition"
      echo " acm csv: $_acm_csv_condition"

      if [[ $_mce_csv_condition != "Succeeded" ]] || [[ $_acm_csv_condition != "Succeeded" ]]; then
        echo "operator csv failed to complete."
        exit 1
      fi
      
      echo "done with waiting."
      set +x
      exit 0
    command:
    - /bin/bash
    - -c
    image: quay.io/acm-sre/ocm-utils:latest
    name: apply
    resources: {}
    workingDir: /workspace/source
  workspaces:
  - name: source
