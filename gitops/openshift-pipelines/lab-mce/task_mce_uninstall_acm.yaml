---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: mce-uninstall-acm
  namespace: open-cluster-management-pipelines-mce
spec:
  params:
  - name: kubeconfig
    default: ""
    description: "base64 encoded kubeconfig of the cluster we want to run this task on. Default to empty string, use the current cluster."
    type: string
  - name: managed-cluster
    default: "cdoan-hosting-cluster"
    description: "name of the managed cluster to run tasks on."
    type: string
  - name: start-snapshot
    default: "2.7.0-DOWNSTREAM-2022-10-07-00-46-31"
    description: "sprint 18"
    type: string
  - name: upgrade-snapshot
    default: "2.7.0-DOWNSTREAM-2022-10-20-05-23-04"
    description: "sprint 19"
    type: string
  steps:
  - args:
    - |-
      set -e


      if [ -f $(pwd)/remote.kubeconfig ]; then
        export KUBECONFIG=$(pwd)/remote.kubeconfig
      else
        echo "remote kubeconfig not found"
        exit 1
      fi
      
      oc cluster-info

      # hack to set/update the snapshot version
      KUSTOM=./gitops/kustomization/rhacm-operator/base-downstream-release-2.7-acm-d/kustomization.yaml
      S=$(params.start-snapshot)
      echo "Updating start-snapshot: $S"
      cat $KUSTOM | sed -r "s/    newTag: 2.7.0-DOWNSTREAM-2022-10-25-02-23-54/    newTag: $S/g" > temp.yaml
      mv temp.yaml $KUSTOM

      NS=open-cluster-management

      function retry_loop() {
        oc apply -k ./gitops/kustomization/rhacm-operator/base-downstream-release-2.7-acm-d
        oc wait --for condition=Ready pods -n open-cluster-management -l name=multiclusterhub-operator --timeout=90s
        sleep 20
        oc delete mch --all -n open-cluster-management  
      }

      if ! oc get mch -n $NS | grep "multiclusterhub"; then
        echo "mch already deleted." && exit 0
      fi

      echo "$ oc delete mch --all -n open-cluster-management"
      oc delete mch --all -n open-cluster-management || retry_loop
      
      echo "only the acm operator pods should be running now."
      oc get pods -n $NS

      _acm_currentcsv=$(oc get sub -n $NS -ojsonpath='{.items[].status.currentCSV}')
      echo "$ oc delete csv $_acm_currentcsv -n $NS"
      oc delete csv $_acm_currentcsv -n $NS

      _acm_sub=$(oc get sub -n $NS -l operators.coreos.com/advanced-cluster-management.open-cluster-management= -o name)
      echo "$ oc delete $_acm_sub -n $NS"
      oc delete $_acm_sub -n $NS
      
      set +e
      exit 0
    command:
    - /bin/bash
    - -c
    image: quay.io/acm-sre/ocm-utils:latest
    name: apply
    resources: {}
    workingDir: /workspace/source
  workspaces:
  - name: source
