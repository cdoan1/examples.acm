apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: notify-status-ds
spec:
  params:
  - name: snapshot
    default: "1234"
    description: The SNAPSHOT Tag used to deploy the catalogsources
    type: string 
  - name: runStatus
    default: ""
    description: Overall status of the pipeline run
    type: string 
  - name: hubOcLogin
    default: ""
    description: OC Login command for the Hub cluster
    type: string 
  - name: spokeOcLogin
    default: ""
    description: OC Login command for the Spoke cluster
    type: string
  - name: sendNotification
    default: "false"
    description: Sends notification to slack if value is true
    type: string
  - name: mchStatus
    default: "false"
    description: ACM install status
    type: string
  - name: hubHd
    default: "false"
    description: HyperShift deployment output on the hub
    type: string
  steps:
  - args:
    - |-
      #!/bin/bash
      set -e
      
      if oc get secret slack-token; then
        SLACK_TOKEN=$(oc get secret slack-token -ojsonpath='{.data.slack-token}' | base64 --decode)
      else
        echo "slack token is undefined, skipping."
        exit 0
      fi
      

      # Workaround pipeline task bug when task fails      
      hubHdStatus="Failed"
      if [[ "$(inputs.params.hubHd)" == *"Completed"* ]]; then
        hubHdStatus="Succeeded"
      fi
      overallStatus="$(inputs.params.runStatus)"
      if [[ $hubHdStatus == "Failed" ]] || [[ $spokeHdStatus == "Failed" ]]; then
        overallStatus="Failed"
      fi

      if [[ "$(inputs.params.sendNotification)" == "true" ]]; then
        echo "Send notification to app-lifecycle-backend-dev slack channel"
        cat > payload.txt <<EOF
      { 
        "text": "ACM build $(inputs.params.snapshot)\nOverall status: $overallStatus\nACM install:$(inputs.params.mchStatus)\n"
      }
      EOF

        curl -X POST -H 'Content-type: application/json' \
          --data-binary "@payload.txt" \
          https://hooks.slack.com/services/$SLACK_TOKEN

      else
        echo "Skip notification to slack channel"
      fi

      exit 0

    command:
    - /bin/bash
    - -c
    image: quay.io/zkayyali812/ocm-utils:latest
    name: apply
    resources: {}
    workingDir: /workspace/source
  workspaces:
  - name: source